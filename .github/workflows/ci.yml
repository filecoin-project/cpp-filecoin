name: CI

on: 
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # 3 jobs in total
        os: [ubuntu-18.04, macOS-latest]
        compiler: [{
          "cc": "gcc",
          "cxx": "g++"
         }, {
          "cc": "clang",
          "cxx": "clang++"
        }]
        exclude:
          - os: macOS-latest
            compiler:
              cc: gcc
        include:
          - os: macOS-latest
            env:
              CFLAGS: "-I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include"
    steps:
    - uses: actions/checkout@v1
      name: checkout
      with:
        submodules: true
        clean: true
        fetch-depth: 1
        token: ${{ secrets.CI_TOKEN }}
    - name: install dependencies
      run: |
        set -e
        if [ "$RUNNER_OS" = "macOS" ]; then
          brew install ninja
        else
          sudo apt-get update || true
          sudo apt-get install -y ninja-build python-setuptools
        fi

        pip3 -V || sudo python3 -m pip install --upgrade pip
        sudo pip3 install scikit-build
        sudo pip3 install cmake requests gitpython gcovr pyyaml
        sudo curl https://sh.rustup.rs -sSf | sh -s -- -y
    - name: cmake
      env:
        CC: ${{ matrix.compiler.cc }}
        CXX: ${{ matrix.compiler.cxx }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # has to be included to access other secrets
        GITHUB_HUNTER_USERNAME: ${{ secrets.GITHUB_HUNTER_USERNAME }}
        GITHUB_HUNTER_TOKEN: ${{ secrets.GITHUB_HUNTER_TOKEN }}
      run: cmake . -GNinja -Bbuild
    - name: build
      run: cmake --build build -- -j2
    - name: test
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
      run: cmake --build build --target test
