name: Clang Tidy

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  build:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
      name: checkout repo
    - name: checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    - name: install
      run: |
        brew install ninja llvm pkg-config
        sudo python3 -m pip install --upgrade pip
        sudo python3 -m pip install scikit-build cmake requests gitpython gcovr pyyaml
    - name: run checks
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # has to be included to access other secrets
        CFLAGS: "-I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include"
        CXXFLAGS: "-isysroot/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include"
      run: |
        #!/bin/bash
        LLVM_DIR=/usr/local/Cellar/llvm
        test -d $LLVM_DIR || echo $(echo "llvm is absent, cannot continue" && exit 1)
        VER_COUNT=$(ls -1 ${LLVM_DIR} | wc -l)
        test ${VER_COUNT} -eq 0 && echo "no llvm version detected" && exit 1
        test $VER_COUNT -gt 1 && echo "wrong llvm installation" && exit 1
        LLVM_VER=$(ls -1 ${LLVM_DIR})
        export LLVM_ROOT=${LLVM_DIR}/${LLVM_VER}
        export PATH=${LLVM_ROOT}/bin:${LLVM_ROOT}/share/clang:${PATH}
        cmake . -GNinja -Bbuild `housekeeping/clang-patch/apply.sh`
        cmake --build build --target generated
        housekeeping/clang-tidy.sh build
